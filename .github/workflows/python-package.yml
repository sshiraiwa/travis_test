name: main

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest]
        env:
           - { USE_CUDA_PARALLEL: "00"}
           - { USE_CUDA_PARALLEL: "10"}	
           - { USE_CUDA_PARALLEL: "01"}
           - { USE_CUDA_PARALLEL: "11"}	   

        include:
           - os: macos-latest
             python-version: 3.6
             env: {USE_CUDA_PARALLEL: "11"}
#
    runs-on: ${{ matrix.os }}	   
    env: ${{ matrix.env }}		   
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip      
        if [ "${USE_CUDA_PARALLEL}" = "01" ] || [ "${USE_CUDA_PARALLEL}" = "11" ]; then
            sudo apt-get install mpich;
            sudo apt-get install libmpich-dev;
            sudo pip3 install mpi4py;
            python3 -c "import mpi4py;print(mpi4py.get_include())";
        fi
        #pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build
      run: |
        # pytest


